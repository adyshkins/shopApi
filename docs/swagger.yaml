basePath: /
definitions:
  models.Cart:
    properties:
      added_at:
        type: string
      cart_id:
        type: integer
      product_id:
        type: integer
      quantity:
        type: integer
      user_id:
        type: integer
    type: object
  models.ErrorResponse:
    properties:
      details:
        example: Подробности ошибки
        type: string
      error:
        example: Некорректные данные
        type: string
    type: object
  models.Product:
    properties:
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      product_id:
        type: integer
      stock:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: API для работы с заказами и продуктами.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://example.com/terms/
  title: Shop API
  version: "1.0"
paths:
  /carts:
    get:
      description: Получить список корзин
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all cart
      tags:
      - Cart
  /carts/{id}:
    post:
      description: Добаление нового продукта в корзину
      parameters:
      - description: Cart ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Cart'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all cart
      tags:
      - Cart
  /products:
    get:
      description: Retrieves a list of all available products from the database.
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all products
      tags:
      - Products
    post:
      consumes:
      - application/json
      description: Adds a new product to the database.
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new product
      tags:
      - Products
  /products/{id}:
    delete:
      description: Deletes a product from the database by its ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete product by ID
      tags:
      - Products
    get:
      description: Retrieves a single product by its ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get product by ID
      tags:
      - Products
    put:
      consumes:
      - application/json
      description: Updates the details of an existing product by its ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update product by ID
      tags:
      - Products
swagger: "2.0"
